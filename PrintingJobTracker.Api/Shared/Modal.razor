@if (IsVisible)
{
    <div class="modal-backdrop" @onclick="OnBackdropClick">
        <div class="modal-content" @onclick:stopPropagation="true">
            <div class="modal-header">
                <h3>@Title</h3>
                <button class="modal-close" @onclick="Close">&times;</button>
            </div>
            <div class="modal-body">
                @ChildContent
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public EventCallback<bool> IsVisibleChanged { get; set; }

    [Parameter]
    public string Title { get; set; } = "Modal";

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    [Parameter]
    public bool CloseOnBackdropClick { get; set; } = true;

    protected override void OnParametersSet()
    {
        Console.WriteLine($"Modal OnParametersSet - IsVisible: {IsVisible}");
        base.OnParametersSet();
    }

    public async Task Show()
    {
        Console.WriteLine("Modal Show called");
        IsVisible = true;
        await IsVisibleChanged.InvokeAsync(IsVisible);
        StateHasChanged();
    }

    public async Task Hide()
    {
        Console.WriteLine("Modal Hide called");
        IsVisible = false;
        await IsVisibleChanged.InvokeAsync(IsVisible);
        await OnClose.InvokeAsync();
        StateHasChanged();
    }

    private async Task Close()
    {
        await Hide();
    }

    private async Task OnBackdropClick()
    {
        if (CloseOnBackdropClick)
        {
            await Hide();
        }
    }
}

<style>
    .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .modal-content {
        background: white;
        border-radius: 8px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
        max-width: 600px;
        width: 90%;
        max-height: 90vh;
        overflow-y: auto;
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1.5rem;
        border-bottom: 1px solid #e0e0e0;
    }

        .modal-header h3 {
            margin: 0;
            font-size: 1.5rem;
            color: #333;
        }

    .modal-close {
        background: none;
        border: none;
        font-size: 2rem;
        cursor: pointer;
        color: #666;
        line-height: 1;
        padding: 0;
        width: 30px;
        height: 30px;
    }

        .modal-close:hover {
            color: #333;
        }

    .modal-body {
        padding: 1.5rem;
    }
</style>