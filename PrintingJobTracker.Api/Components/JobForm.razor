@using PrintingJobTracker.Application.DTOs
@using PrintingJobTracker.Application.Interfaces
@using PrintingJobTracker.Domain.Entities.Enums

@inject IJobService JobService

<EditForm Model="@NewJob" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="jobName">Nombre del Job</label>
        <InputText id="jobName"
                   class="form-control"
                   @bind-Value="NewJob.JobName"
                   placeholder="Ej: Procesamiento de Órdenes" />
        <ValidationMessage For="@(() => NewJob.JobName)" />
    </div>

    <SelectorClient @bind-SelectedClientId="NewJob.ClientId" />

    <div class="form-group">
        <label for="quantity">Cantidad</label>
        <InputNumber id="quantity"
                     class="form-control"
                     @bind-Value="NewJob.Quantity"
                     placeholder="Cantidad de items" />
        <ValidationMessage For="@(() => NewJob.Quantity)" />
    </div>

    <div class="form-group">
        <label for="mailDeadline">Fecha Límite</label>
        <InputDate id="mailDeadline"
                   class="form-control"
                   @bind-Value="NewJob.MailDeadline" />
        <ValidationMessage For="@(() => NewJob.MailDeadline)" />
    </div>

    <div class="form-group">
        <label for="carrier">Carrier</label>
        <InputSelect id="carrier"
                     class="form-control"
                     @bind-Value="NewJob.Carrier">
            @foreach (var carrier in Enum.GetValues<CarrierType>())
            {
                <option value="@carrier">@carrier</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => NewJob.Carrier)" />
    </div>

    <div class="form-actions">
        <button type="button" class="btn btn-secondary" @onclick="Cancel">
            Cancelar
        </button>
        <button type="submit" class="btn btn-primary" disabled="@IsSaving">
            @if (IsSaving)
            {
                <span>Guardando...</span>
            }
        </button>
    </div>
</EditForm>

@code {
    [Parameter]
    public CreateJobRequest? Job { get; set; }

    [Parameter]
    public EventCallback OnSaved { get; set; }

    [Parameter]
    public EventCallback OnCancelled { get; set; }

    private CreateJobRequest NewJob { get; set; } = new();
    private bool IsSaving { get; set; }

    private async Task HandleSubmit()
    {
        IsSaving = true;
        string traceId = Guid.NewGuid().ToString();
        try
        {
            await JobService.AddJobAsync(traceId, NewJob);

            await OnSaved.InvokeAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al guardar Job: {ex.Message}");
        }
        finally
        {
            IsSaving = false;
        }
    }

    private async Task Cancel()
    {
        await OnCancelled.InvokeAsync();
    }
}

<style>
    .form-group {
        margin-bottom: 1.5rem;
    }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #333;
        }

    .form-control {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 1rem;
        transition: border-color 0.2s;
    }

        .form-control:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
        }

    .validation-message {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }

    .form-actions {
        display: flex;
        justify-content: flex-end;
        gap: 1rem;
        margin-top: 2rem;
        padding-top: 1rem;
        border-top: 1px solid #e0e0e0;
    }

    .btn {
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 4px;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.2s;
    }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

    .btn-primary {
        background: #007bff;
        color: white;
    }

        .btn-primary:hover:not(:disabled) {
            background: #0056b3;
        }

    .btn-secondary {
        background: #6c757d;
        color: white;
    }

        .btn-secondary:hover {
            background: #545b62;
        }
</style>